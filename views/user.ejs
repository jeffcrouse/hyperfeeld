<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>brainz.io user</title>

    <!-- Bootstrap core CSS -->
    <link href="/css/bootstrap.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="/css/main.css" rel="stylesheet">
  </head>

  <body>

    <div class="container">

    	<div class="btn-group btn-group-justified" id="colors">
    		<% colors.forEach(function(el, index) { %>
    		<a href="#" class="btn btn-default" style="color: #<%= el.hex %>;" data-value="<%= el.name %>"><%= el.name %></a>
    		<% }); %>
    	</div>

		<hr />

		<div class="btn-group btn-group-justified" id="control">
			<a href="#" id="start-btn" class="btn btn-success btn-lg">Start</a>
			<a href="#" id="stop-btn" class="btn btn-danger btn-lg active">Stop</a>
			<a href="#" id="send-btn" class="btn btn-primary btn-lg">Send</a>
		</div>


		<div id="info">
		</div>

		<hr />

		Attention:<br />
		<div class="progress" id="attention">
			<div class="progress-bar progress-bar-info" style="width: 60%;"></div>
		</div>

		Meditation<br />
		<div class="progress" id="meditation">
			<div class="progress-bar progress-bar-success" style="width: 60%;"></div>
		</div>


		<hr />

		Simulator:
		<div class="btn-group btn-group-justified" id="simulator">
			<a href="#" id="simulator-on-btn" class="btn btn-default btn-lg active">on</a>
			<a href="#" id="simulator-off-btn" class="btn btn-default btn-lg">off</a>
		</div>

    </div> <!-- /container -->


    <script src="http://code.jquery.com/jquery.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/requestAnimFrame.js"></script>
    <script>
    var start, stop;
	var data = [];
    $('#colors a[data-value="Red"]').addClass("active");
    var bSimulateDevice = true;
    var bRecording = false;

    $(function(){
    	$("#colors a").click(function(){
    		$("#colors a").removeClass("active");
    		$(this).addClass("active");
    	});

    	$("#start-btn").click(startRecording);
    	$("#stop-btn").click(stopRecording);
    	$("#send-btn").click(sendData);
    	$("#simulator-on-btn").click(simulatorOn);
    	$("#simulator-off-btn").click(simulatorOff)
    	setInterval(update, 100);
    })

    function update() {
    	if(bSimulateDevice) {
			onData({"attention": Math.random(), "meditation": Math.random(), "date": new Date()});
		}
		$("#info").text("Data: "+data.length)
    }

    function startRecording() {
		$("#control a").removeClass("active");
		$(this).addClass("active");
    	start = new Date();
    	bRecording = true;
    }

    function stopRecording() {
    	$("#control a").removeClass("active");
    	$("#stop-btn").addClass("active");
    	stop = new Date();
    	bRecording = false;
    }

    function sendData() {
    	stopRecording()
    	var color = $('#colors a.active').attr("data-value");
    	data = [];
    	// send data to server here
    }

    function simulatorOn() {
    	$("#simulator a").removeClass("active");
    	$(this).addClass("active");
    	bSimulateDevice = true;
    }
    function simulatorOff() {
		$("#simulator a").removeClass("active");
    	$(this).addClass("active");
    	bSimulateDevice = false;
    }

    /**
    *	This function is called from the iOS app -OR- in animate() if bSimulateDevice is true
    */
    function onData( d ) {
    	if(bRecording) {
    		data.push(d);
    	}

    	var attention = Math.ceil(d.attention*100)+"%";
    	var meditation = Math.ceil(d.meditation*100)+"%";
    	$("#attention .progress-bar").css("width", attention);
    	$("#meditation .progress-bar").css("width", meditation);
    }

    </script>
  </body>
</html>